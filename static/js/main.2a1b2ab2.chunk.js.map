{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["imageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","key","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","ImageCard","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAyCeA,MAvCf,YAA+B,IAAVC,EAAS,EAATA,MACbC,EAAOD,EAAMC,KAAKC,MAAM,KAC9B,OACE,yBAAKC,UAAU,8CACb,yBAAKC,IAAKJ,EAAMK,aAAcF,UAAU,SAASG,IAAI,KACrD,yBAAKH,UAAU,aACb,4BACE,4BACE,yDACCH,EAAMO,MAET,4BACE,wDACCP,EAAMQ,OAET,4BACE,8DACCR,EAAMS,WAET,4BACE,wDACCT,EAAMU,SAIb,yBAAKP,UAAU,aACZF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACR,0BACEC,IAAKD,EACLV,UAAU,4FAFZ,IAIIS,SCCCG,EAhCK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACdC,mBAAS,IADK,mBAC/BC,EAD+B,KACzBC,EADyB,KAQtC,OACE,6BACE,yBAAKhB,UAAU,kDACb,0BAAMiB,SARK,SAACC,GAChBA,EAAEC,iBACFN,EAAWE,IAMmBf,UAAU,mBAClC,yBAAKA,UAAU,8DACb,2BACEoB,SAAU,SAACF,GAAD,OAAOF,EAAQE,EAAEG,OAAOC,QAClCtB,UAAU,2HACVuB,KAAK,OACLC,YAAY,4DAEd,4BACExB,UAAU,oFACVuB,KAAK,UAFP,qBCqBGE,MAvCf,WAAgB,IAAD,EACeX,mBAAS,IADxB,mBACNY,EADM,KACEC,EADF,OAEqBb,oBAAS,GAF9B,mBAENc,EAFM,KAEKC,EAFL,OAGWf,mBAAS,IAHpB,mBAGNgB,EAHM,KAGAC,EAHA,KAgBb,OAXAC,qBAAU,WACRC,MAAM,gCAAD,OAAiCC,qCAAjC,cAA4EJ,EAA5E,4DAEFK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,CAACX,IAGF,yBAAK9B,UAAU,qBACb,kBAAC,EAAD,CAAaa,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,OAEzCa,GAA+B,IAAlBF,EAAOkB,QACpB,wBAAI5C,UAAU,sCAAd,yEAKD4B,EACC,wBAAI5B,UAAU,yCAAd,KAEA,yBAAKA,UAAU,0BACZ0B,EAAOlB,KAAI,SAACX,GAAD,OACV,kBAACgD,EAAD,CAAWlC,IAAKd,EAAMiD,GAAIjD,MAAOA,UC7B7CkD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.2a1b2ab2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction imageCard({ image }) {\r\n  const tags = image.tags.split(\",\");\r\n  return (\r\n    <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n      <img src={image.webformatURL} className=\"w-full\" alt=\"\" />\r\n      <div className=\"px-6 py-4\">\r\n        <ul>\r\n          <li>\r\n            <strong> 작성자: </strong>\r\n            {image.user}\r\n          </li>\r\n          <li>\r\n            <strong>조회수: </strong>\r\n            {image.views}\r\n          </li>\r\n          <li>\r\n            <strong>다운로드: </strong>\r\n            {image.downloads}\r\n          </li>\r\n          <li>\r\n            <strong>좋아요: </strong>\r\n            {image.likes}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"px-6 py-4\">\r\n        {tags.map((tag, index) => (\r\n          <span\r\n            key={index}\r\n            className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\"\r\n          >\r\n            #{tag}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default imageCard;\r\n","import React, { useState } from \"react\";\r\n\r\nconst ImageSearch = ({ searchText }) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    searchText(text);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\r\n        <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\r\n          <div className=\"flex items-center border-b border-b-2 border-gray-800 py-2\">\r\n            <input\r\n              onChange={(e) => setText(e.target.value)}\r\n              className=\"appearance-none bg-transparent text-sm border-none w-full text-gray-700  mr-3 py-1 px-2 leading-tight focus:outline-none\"\r\n              type=\"text\"\r\n              placeholder=\"키워드를 검색하세요\"\r\n            />\r\n            <button\r\n              className=\"flex-shrink-0 bg-gray-900 hover:bg-gray-800  text-sm text-white py-1 px-4 rounded\"\r\n              type=\"submit\"\r\n            >\r\n              검색\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageSearch;\r\n","import React, { useState, useEffect } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport ImageSearch from \"./components/ImageSearch\";\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState(\"\");\n\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&\n  image_type=photo&pretty=true&lang=ko&order=popular`)\n      .then((res) => res.json())\n      .then((data) => {\n        setImages(data.hits);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, [term]);\n\n  return (\n    <div className=\"container mx-auto\">\n      <ImageSearch searchText={(text) => setTerm(text)}></ImageSearch>\n\n      {!isLoading && images.length === 0 && (\n        <h1 className=\"text-2xl text-center mx-auto mt-32\">\n          이미지를 찾을수 없습니다.\n        </h1>\n      )}\n\n      {isLoading ? (\n        <h1 className=\"text-6xl text-white mx-auto relative \">.</h1>\n      ) : (\n        <div className=\"grid grid-cols-3 gap-4\">\n          {images.map((image) => (\n            <ImageCard key={image.id} image={image}></ImageCard>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}